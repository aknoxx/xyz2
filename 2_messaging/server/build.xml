<?xml version="1.0" encoding="UTF-8"?>
<project name="dst2_2_Server" default="compile" basedir=".">

    <property environment="env"/>
    <property name="glassfish.home" value="${env.GLASSFISH_HOME}"/>
    <property name="domain.dir" value="${glassfish.home}/domains/domain1"/>
    <property name="admin.cli.jar" value="${glassfish.home}/modules/admin-cli.jar"/>
    <property name="jmsconfig.name" value="jms_config.xml"/>

    <property name="src.dir" value="src"/>
    <property name="build.dir" value="build"/>
    <property name="setup.dir" value="setup"/>
    <property name="dist.dir" value="dist"/>
    <property name="lib.dir" value="../../lib"/>
    <property name="config.dir" value="config"/>
    <property name="jarfile.name" value="dst2_2"/>
    <property name="clientJarfile.name" value="dst2_2_client"/>
            
    <path id="classpath">
        <fileset dir="${glassfish.home}/lib">
            <include name="javaee.jar"/>
            <include name="appserv-rt.jar"/>
        </fileset>
    </path>
    
    <target name="check">
        <fail unless="env.GLASSFISH_HOME">
            #### You must install GlassFish V3 and set the GLASSFISH_HOME variable
        </fail>
    </target>

    <target name="setup" depends="check">
        <java jar="${admin.cli.jar}" fork="true" spawn="false">
	       <arg line="add-resources ${setup.dir}/${jmsconfig.name}"/>
        </java>
    </target>
    
    <target name="compile" depends="check">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}"
               destdir="${build.dir}"
               debug="on"
               deprecation="on"
               classpathref="classpath" />
    </target>
    
    <target name="dist" depends="compile">
        <mkdir dir="${dist.dir}"/>
        <jar jarfile="${dist.dir}/${jarfile.name}.jar">
            <fileset dir="${build.dir}" />
            <fileset dir="${config.dir}"/>
        </jar>
        <jar jarfile="${lib.dir}/${clientJarfile.name}.jar">
            <fileset dir="${build.dir}">
                <!-- set the classes to be included for your clients.-->
                <include name="dst2/ejb/your.first.class"/>
                <include name="dst2/ejb/your.second.class"/>
            </fileset>
        </jar>
    </target>
    
    <target name="deploy" depends="dist">
	   <java jar="${admin.cli.jar}" fork="true" spawn="false">
		  <arg line="deploy ${dist.dir}/${jarfile.name}.jar"/>
    	   </java>
    </target>
    
    <target name="undeploy" depends="check">
        <java jar="${admin.cli.jar}" fork="true" spawn="false">
		  <arg line="undeploy ${jarfile.name}"/>
    	   </java>
    </target>
    
    <target name="redeploy" depends="undeploy,deploy" />
    
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete file="${lib.dir}/${clientJarfile.name}.jar"/>
        <java jar="${admin.cli.jar}" fork="true" spawn="false">
            <arg line="delete-connector-connection-pool --cascade=true dst.FactoryPool"/>
	   </java>
        <java jar="${admin.cli.jar}" fork="true" spawn="false">
            <arg line="delete-jms-resource queue.dst.MyQueue"/>
	   </java>
    </target>
</project>